"""modify_tables

Revision ID: 138ca0a2b975
Revises: d997da871fed
Create Date: 2023-01-26 14:07:40.520296

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "138ca0a2b975"
down_revision = "d997da871fed"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f("uq_roles_id"), "roles", ["id"])
    op.create_unique_constraint(
        op.f("uq_user_access_history_id"), "user_access_history", ["id"]
    )
    op.create_unique_constraint(
        op.f("uq_user_roles_user_id"), "user_roles", ["user_id"]
    )
    op.add_column("users", sa.Column("third_party_id", sa.String(), nullable=True))
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    op.create_unique_constraint(op.f("uq_users_id"), "users", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_id"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.drop_column("users", "third_party_id")
    op.drop_constraint(op.f("uq_user_roles_user_id"), "user_roles", type_="unique")
    op.drop_constraint(
        op.f("uq_user_access_history_id"), "user_access_history", type_="unique"
    )
    op.drop_constraint(op.f("uq_roles_id"), "roles", type_="unique")
    # ### end Alembic commands ###
