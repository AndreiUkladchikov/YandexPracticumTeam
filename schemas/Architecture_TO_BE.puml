@startuml Architecture

skinparam componentStyle uml2
actor Client
component NGINX
file FilmSQLite


node Auth-Service{
component Auth
database AuthPostgres
database AuthCache
}

node Admin-Service{
component AdminBackend
database AdminPostgres
}

node Film-Service{
component FilmBackend
database FilmElastic
database FilmCache
}

node ETL-Service{
component ETLService
}


node UGC-Service{
component UGCBackend
queue Kafka
component ClickHouse
component ETLServiceUGC
}

node Notification-Service{
component NotificationAdminPanel
component NotificationApi
database TemplateDb
queue RabbitMQ_Queue1
queue RabbitMQ_Queue2
component ETL
component Sender
}

node Promo-Service{
component PromoApi
database PromoPostgres
component PromoAdmin
}

NotificationAdminPanel -up- TemplateDb
NotificationApi -up- TemplateDb
NotificationAdminPanel -up-> RabbitMQ_Queue1
NotificationApi -up-> RabbitMQ_Queue1
RabbitMQ_Queue1 -left-> ETL
ETL -left-> RabbitMQ_Queue2
RabbitMQ_Queue2 -left-> Sender
Auth -up- NotificationApi

Client -> NGINX
NGINX -> Auth
Auth -up- AuthPostgres
Auth -up- AuthCache
Auth <-left-> AdminBackend: Добавление новых\n фильмов
AdminBackend -down- AdminPostgres

FilmSQLite-[dotted]right-->AdminPostgres

Auth <-> FilmBackend: Запрос на получение фильма\nперсоны\nжанра
FilmBackend -right- FilmElastic
FilmBackend -down- FilmCache


AdminPostgres-[dashed]->ETLService
ETLService-[dashed]>FilmElastic

Kafka-[dashed]>ETLServiceUGC
ETLServiceUGC-[dashed]>ClickHouse

ClickHouse<-->UGCBackend

Auth<-up->UGCBackend
UGCBackend-right-Kafka

PromoAdmin<-up->PromoPostgres
PromoApi<-up->PromoPostgres
PromoAdmin-up-Auth
PromoAdmin-up-NotificationApi


@enduml